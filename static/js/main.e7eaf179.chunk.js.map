{"version":3,"sources":["components/BackGroundBlock/BackGroundBlock.module.scss","components/Button/Button.module.sass","assets/footer.jpg","App.module.scss","assets/background.jpg","pages/Home/Home.module.scss","services/firebase.js","context/firebaseContext.js","components/BackGroundBlock/index.js","components/Header/index.js","components/Paragraph/index.js","components/FooterBlock/index.js","components/CardList/Card/index.js","components/CardList/index.js","services/dictionary.js","components/SectionBlock/index.js","components/Button/index.js","pages/Home/index.js","pages/LoginPage/index.js","App.js","index.js","components/CardList/Card/Card.module.scss","components/Header/Header.module.scss","pages/LoginPage/LoginPage.module.scss","components/SectionBlock/SectionBlock.module.scss","components/Paragraph/Paragraph.module.scss","components/FooterBlock/FooterBlock.module.sass","components/CardList/CardList.module.scss"],"names":["module","exports","firebaseConfig","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","console","log","Firebase","setUserUid","uid","userUid","signWithEmail","email","password","onError","auth","signInWithEmailAndPassword","catch","err","message","registerWithEmail","passwordRepeat","createUserWithEmailAndPassword","getUserCardsRef","database","ref","firebase","initializeApp","this","firebaseContext","createContext","BackGroundBlock","children","backgroundImg","fullHeight","styleCover","backgroundImage","height","className","s","cover","style","Header","sizePoint","white","opacity","uppercase","size","React","createElement","cl","header","toUpperCase","whiteColor","Paragraph","paragraph","FooterBlock","warp","Card","state","done","isRemembered","handleCardClick","setState","handleIsRememberClick","handleDeletedClick","id","props","onDeleted","handleSpeech","onSpeech","eng","rus","root","card","onClick","cardInner","cardFront","cardBack","icon","CheckSquareOutlined","DeleteOutlined","SoundOutlined","Component","CardList","wordArr","form","onSubmit","e","autoComplete","placeholder","name","type","onChange","value","card_list","map","onDeletedItem","key","API_KEY","getTranslateWord","text","a","lang","fetch","headers","Authorization","res","json","body","Section","backgroundColor","row","Button","btn","Home","useState","setWordArr","setRus","setEng","useContext","firstUpdate","user","useRef","useSpeechSynthesis","speak","voices","useEffect","on","Array","isArray","val","from","useLayoutEffect","current","set","checkField","field","interpretator","translate","then","status","result","handleSubmitForm","preventDefault","getWord","newWord","Date","SectionBlock","word","find","voice","newWordArr","filter","item","target","getAttribute","footerBackground","signOut","Content","Layout","LoginPage","reg","appState","toggleLogReg","prevState","onFinishAuth","context","onFinishFailedAuth","errorInfo","onFinishReg","onFinishFailedReg","labelCol","span","wrapperCol","initialValues","remember","onFinish","onFinishFailed","Item","label","rules","required","Password","offset","htmlType","form_wrap","switch","btn_switch","renderFormReg","renderFormAuth","contextType","App","onAuthStateChanged","spin_wrap","ReactDom","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.e7eaf179.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"BackGroundBlock_cover__1zX8R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__zCqxc\"};","module.exports = __webpack_public_path__ + \"static/media/footer.37234ecc.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spin_wrap\":\"App_spin_wrap__1_pDV\"};","module.exports = __webpack_public_path__ + \"static/media/background.898d65d0.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Home_root__J-m8p\",\"AppLogo\":\"Home_AppLogo__11H3R\",\"icon\":\"Home_icon__1wB5i\",\"App-logo-spin\":\"Home_App-logo-spin__ps0EL\"};","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nimport \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_API_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n};\r\n\r\nconsole.log(process.env);\r\n\r\nclass Firebase {\r\n    constructor() {\r\n        firebase.initializeApp(firebaseConfig);\r\n\r\n        this.auth = firebase.auth();\r\n        this.database = firebase.database();\r\n        this.userUid = null;\r\n    }\r\n\r\n    setUserUid = (uid) => (this.userUid = uid);\r\n\r\n    signWithEmail = (email, password, onError) => {\r\n        this.auth.signInWithEmailAndPassword(email, password).catch((err) => {\r\n            console.log(err);\r\n            onError(err.message);\r\n        });\r\n    };\r\n\r\n    registerWithEmail = (email, password, passwordRepeat, onError) => {\r\n        if (password === passwordRepeat) {\r\n            this.auth\r\n                .createUserWithEmailAndPassword(email, password)\r\n                .catch((err) => onError(err.message));\r\n        } else {\r\n            onError(\"пароли не совпадают\");\r\n        }\r\n    };\r\n    getUserCardsRef = () => {\r\n        return this.database.ref(`/cards/${this.userUid}`);\r\n    };\r\n}\r\n\r\n// export const fire = firebase;\r\n\r\n// const database = fire.database();\r\n\r\n// export default database;\r\n\r\nexport default Firebase;\r\n","import { createContext } from \"react\";\r\n\r\nconst firebaseContext = createContext(null);\r\n\r\nexport default firebaseContext;\r\n","import React from \"react\";\nimport s from \"./BackGroundBlock.module.scss\";\n\nconst BackGroundBlock = ({ children, backgroundImg, fullHeight = false }) => {\n    const styleCover = { backgroundImage: `url(${backgroundImg})` };\n    if (fullHeight) {\n        styleCover.height = \"100vh\";\n    }\n\n    return (\n        <div className={s.cover} style={styleCover}>\n            {children}\n        </div>\n    );\n};\n\nexport default BackGroundBlock;\n","import React from \"react\";\nimport cl from \"classnames\";\nimport s from \"./Header.module.scss\";\n\nconst Header = ({ children, white, opacity, uppercase, size = \"xl\" }) => {\n    let sizePoint;\n    switch (size) {\n        case \"xl\":\n            sizePoint = 1;\n            break;\n        case \"l\":\n            sizePoint = 2;\n            break;\n        case \"m\":\n            sizePoint = 3;\n            break;\n        case \"s\":\n            sizePoint = 4;\n            break;\n        case \"xs\":\n            sizePoint = 5;\n            break;\n        default:\n            sizePoint = 1;\n    }\n\n    return React.createElement(\n        `h${sizePoint}`,\n        {\n            className: cl(s.header, s[`size${size.toUpperCase()}`], {\n                [s.whiteColor]: white,\n                [s.opacity]: opacity,\n                [s.uppercase]: uppercase,\n            }),\n        },\n        children\n    );\n};\nexport default Header;\n","import React from \"react\";\nimport cl from \"classnames\";\nimport s from \"./Paragraph.module.scss\";\n\nconst Paragraph = ({ children, white }) => {\n    return (\n        <p className={cl(s.paragraph, { [s.whiteColor]: white })}>{children}</p>\n    );\n};\nexport default Paragraph;\n","import React from \"react\";\nimport s from \"./FooterBlock.module.sass\";\n\nconst FooterBlock = ({ children }) => {\n    return (\n        <div className={s.cover}>\n            <div className={s.warp}>{children}</div>\n        </div>\n    );\n};\n\nexport default FooterBlock;\n","import React from \"react\";\r\nimport s from \"./Card.module.scss\";\r\nimport cl from \"classnames\";\r\nimport {\r\n    CheckSquareOutlined,\r\n    DeleteOutlined,\r\n    SoundOutlined,\r\n} from \"@ant-design/icons\";\r\n\r\nclass Card extends React.Component {\r\n    state = {\r\n        done: false,\r\n        isRemembered: false,\r\n    };\r\n\r\n    handleCardClick = () => {\r\n        this.setState(({ done, isRemembered }) => {\r\n            if (isRemembered) {\r\n                return { done: false };\r\n            } else {\r\n                return {\r\n                    done: !done,\r\n                };\r\n            }\r\n        });\r\n    };\r\n\r\n    handleIsRememberClick = () => {\r\n        this.setState(({ isRemembered, done }) => {\r\n            if (!isRemembered) {\r\n                return {\r\n                    done: false,\r\n                    isRemembered: !isRemembered,\r\n                };\r\n            } else {\r\n                return {\r\n                    isRemembered: !isRemembered,\r\n                };\r\n            }\r\n        });\r\n    };\r\n\r\n    handleDeletedClick = () => {\r\n        const { id } = this.props;\r\n        this.props.onDeleted(id);\r\n    };\r\n\r\n    handleSpeech = () => {\r\n        const { id } = this.props;\r\n        this.props.onSpeech(id);\r\n    };\r\n\r\n    render() {\r\n        const { eng, rus } = this.props;\r\n        const { done } = this.state;\r\n        const { isRemembered } = this.state;\r\n        return (\r\n            <div className={s.root}>\r\n                <div\r\n                    className={cl(s.card, {\r\n                        [s.done]: done,\r\n                        [s.isRemembered]: isRemembered,\r\n                    })}\r\n                    onClick={this.handleCardClick}\r\n                >\r\n                    <div className={s.cardInner}>\r\n                        <div className={s.cardFront}>{eng}</div>\r\n                        <div className={s.cardBack}>{rus}</div>\r\n                    </div>\r\n                </div>\r\n                <div className={s.icon}>\r\n                    <CheckSquareOutlined onClick={this.handleIsRememberClick} />\r\n                </div>\r\n                <div className={s.icon}>\r\n                    <DeleteOutlined onClick={this.handleDeletedClick} />\r\n                </div>\r\n                <div className={s.icon}>\r\n                    <SoundOutlined onClick={this.handleSpeech} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Card;\r\n","import React, { Component } from \"react\";\nimport s from \"./CardList.module.scss\";\nimport Card from \"./Card\";\n\nclass CardList extends Component {\n    render() {\n        const { wordArr, eng, rus } = this.props;\n        return (\n            <>\n                <form\n                    className={s.form}\n                    onSubmit={(e) => this.props.onSubmit(e)}\n                >\n                    <input\n                        autoComplete=\"off\"\n                        placeholder=\"enter english word\"\n                        name=\"eng\"\n                        type=\"text\"\n                        onChange={(e) => this.props.onChange(e)}\n                        value={eng}\n                    />\n                    <input\n                        autoComplete=\"off\"\n                        placeholder=\"введите перевод слова\"\n                        name=\"rus\"\n                        type=\"text\"\n                        onChange={(e) => this.props.onChange(e)}\n                        value={rus}\n                    />\n                    <button>Add word</button>\n                </form>\n                <div className={s.card_list}>\n                    {wordArr.map(({ eng, rus, id }) => (\n                        <Card\n                            onSpeech={this.props.onSpeech}\n                            onDeleted={this.props.onDeletedItem}\n                            id={id}\n                            key={id}\n                            eng={eng}\n                            rus={rus}\n                        />\n                    ))}\n                </div>\n            </>\n        );\n    }\n}\n\nexport default CardList;\n","const API_KEY = process.env.REACT_APP_API_KEY;\n\nconst getTranslateWord = async (text, lang = \"en-ru\") => {\n    const res = await fetch(\n        `https://reactmarathon-api.netlify.app/api/translate?text=${text}&lang=${lang}`,\n        {\n            headers: {\n                Authorization: API_KEY,\n            },\n        }\n    );\n    const body = await res.json();\n    return body;\n};\n\nexport default getTranslateWord;\n","import React from \"react\";\nimport cl from \"classnames\";\nimport s from \"./SectionBlock.module.scss\";\n\nconst Section = ({\n    children,\n    backgroundColor = \"transparent\",\n    row = false,\n}) => {\n    const styleCover = { backgroundColor };\n    return (\n        <section className={cl(s.cover)} style={styleCover}>\n            <div className={cl(s.warp, { [s.row]: row })}>{children}</div>\n        </section>\n    );\n};\n\nexport default Section;\n","import React from \"react\";\r\nimport s from \"./Button.module.sass\";\r\n\r\nconst Button = ({ children, onClick }) => {\r\n    return (\r\n        <>\r\n            <button onClick={onClick} className={s.btn}>\r\n                {children}\r\n            </button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n    useState,\r\n    useEffect,\r\n    useLayoutEffect,\r\n    useRef,\r\n    useContext,\r\n} from \"react\";\r\nimport firebaseContext from \"../../context/firebaseContext\";\r\n\r\nimport { useSpeechSynthesis } from \"react-speech-kit\";\r\n\r\nimport BackGroundBlock from \"../../components/BackGroundBlock\";\r\nimport Header from \"../../components/Header\";\r\nimport Paragraph from \"../../components/Paragraph\";\r\nimport FooterBlock from \"../../components/FooterBlock\";\r\nimport CardList from \"../../components/CardList\";\r\nimport wordsList from \"../../components/WordsList\";\r\nimport getTranslateWord from \"../../services/dictionary\";\r\n\r\nimport SectionBlock from \"../../components/SectionBlock\";\r\nimport Button from \"../../components/Button\";\r\n\r\nimport footerBackground from \"../../assets/footer.jpg\";\r\nimport firstBackground from \"../../assets/background.jpg\";\r\nimport s from \"./Home.module.scss\";\r\n\r\nconst Home = (props) => {\r\n    const [wordArr, setWordArr] = useState([]);\r\n    const [rus, setRus] = useState(\"\");\r\n    const [eng, setEng] = useState(\"\");\r\n    const { database, auth, getUserCardsRef } = useContext(firebaseContext);\r\n\r\n    const urlRequest = `/cards/${props.user.uid}`;\r\n\r\n    const firstUpdate = useRef(true);\r\n\r\n    const { speak, voices } = useSpeechSynthesis();\r\n\r\n    useEffect(() => {\r\n        getUserCardsRef().on(\"value\", (res) => {\r\n            if (Array.isArray(res.val())) {\r\n                setWordArr(res.val());\r\n            } else if (res.val()) {\r\n                setWordArr(Array.from(res.val()));\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useLayoutEffect(() => {\r\n        if (firstUpdate.current) {\r\n            firstUpdate.current = false;\r\n        } else {\r\n            getUserCardsRef().set(wordArr);\r\n        }\r\n    }, [wordArr]);\r\n\r\n    const resetForm = () => {\r\n        setRus(\"\");\r\n        setEng(\"\");\r\n    };\r\n\r\n    const handleInputChange = (e) => {\r\n        if (e.target.getAttribute(\"name\") === \"rus\") {\r\n            setRus(e.target.value);\r\n        }\r\n        if (e.target.getAttribute(\"name\") === \"eng\") {\r\n            setEng(e.target.value);\r\n        }\r\n    };\r\n\r\n    const checkField = async (field) => {\r\n        const translate = field === eng ? rus : eng;\r\n        const interpretator = translate === rus ? \"ru-en\" : \"en-ru\";\r\n        if (!field) {\r\n            let result = await getTranslateWord(translate, interpretator).then(\r\n                (res) => {\r\n                    if (res.status) {\r\n                        console.log(\"что-то пошло не так\");\r\n                    } else {\r\n                        console.log(res);\r\n                        return res.translate;\r\n                    }\r\n                }\r\n            );\r\n            return result;\r\n        }\r\n    };\r\n\r\n    const handleSubmitForm = async (e) => {\r\n        e.preventDefault();\r\n        const getWord = {};\r\n        if (!eng && !rus) {\r\n            console.log(\"заполните хотя бы одно поле\");\r\n        } else {\r\n            await checkField(eng).then((res) => (getWord.eng = res));\r\n            await checkField(rus).then((res) => (getWord.rus = res));\r\n            console.log(getWord);\r\n            if ((rus || getWord.rus) && (eng || getWord.eng)) {\r\n                const newWord = {\r\n                    eng: eng || getWord.eng,\r\n                    rus: rus || getWord.rus,\r\n                    id: +new Date(),\r\n                };\r\n                setWordArr([...wordArr, newWord]);\r\n                resetForm();\r\n            } else {\r\n                console.log(\"не случилось =(\");\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDeletedItem = (id) => {\r\n        const newWordArr = wordArr.filter((item) => item.id !== id);\r\n        setWordArr(newWordArr);\r\n    };\r\n\r\n    const onSpeech = (id) => {\r\n        console.log(\"это здесь\");\r\n\r\n        const word = wordArr.find((word) => word.id === id);\r\n        speak({ text: word.eng, voice: voices[11] });\r\n    };\r\n\r\n    const handleSignOut = () => {\r\n        console.log(\"click\");\r\n\r\n        auth.signOut();\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* <BackGroundBlock backgroundImg={firstBackground} fullHeight>\r\n                    <SectionBlock>\r\n                        <Header white>Время учить слова онлайн</Header>\r\n                        <Paragraph white>\r\n                            Используй карточки для запоминания и пополняй\r\n                            словарный запас\r\n                        </Paragraph>\r\n                    </SectionBlock>\r\n                </BackGroundBlock> */}\r\n\r\n            {/* <SectionBlock>\r\n                    <Header size=\"m\">\r\n                        Тренируй память и развивай английский\r\n                    </Header>\r\n                    <SectionBlock row>\r\n                        <Paragraph>\r\n                            <ClockCircleOutlined className={s.icon} />В любое\r\n                            время\r\n                        </Paragraph>\r\n                        <Paragraph>\r\n                            <HomeOutlined className={s.icon} />\r\n                            Из любого места\r\n                        </Paragraph>\r\n                        <Paragraph>\r\n                            <SmileOutlined className={s.icon} />\r\n                            Регулярно\r\n                        </Paragraph>\r\n                    </SectionBlock>\r\n                </SectionBlock> */}\r\n            <SectionBlock backgroundColor=\"lightgrey\">\r\n                <Header size=\"s\">Список слов</Header>\r\n                <Paragraph>\r\n                    Нажимай на карточки и узнавай перевод новых слов\r\n                </Paragraph>\r\n                <CardList\r\n                    wordArr={wordArr}\r\n                    onSpeech={onSpeech}\r\n                    onDeletedItem={handleDeletedItem}\r\n                    onSubmit={handleSubmitForm}\r\n                    onChange={handleInputChange}\r\n                    eng={eng}\r\n                    rus={rus}\r\n                />\r\n            </SectionBlock>\r\n            <BackGroundBlock backgroundImg={footerBackground}>\r\n                <FooterBlock>\r\n                    <Header opacity uppercase size=\"s\">\r\n                        english language\r\n                    </Header>\r\n                    <Button onClick={handleSignOut}>Выйти</Button>\r\n                </FooterBlock>\r\n            </BackGroundBlock>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import React, { Component } from \"react\";\r\nimport { fire } from \"../../services/firebase\";\r\nimport firebaseContext from \"../../context/firebaseContext\";\r\n\r\nimport { Layout, Form, Input, Button } from \"antd\";\r\n\r\nimport s from \"./LoginPage.module.scss\";\r\n\r\nconst { Content } = Layout;\r\n\r\nclass LoginPage extends Component {\r\n    state = {\r\n        reg: false,\r\n        appState: \"\",\r\n    };\r\n\r\n    onError = (text) => {\r\n        this.setState({ ...this.state, appState: text });\r\n    };\r\n\r\n    toggleLogReg = () => {\r\n        this.setState((prevState) => ({\r\n            reg: !prevState.reg,\r\n            appState: \"\",\r\n        }));\r\n    };\r\n\r\n    onFinishAuth = ({ email, password }) => {\r\n        const { signWithEmail } = this.context;\r\n        signWithEmail(email, password, this.onError);\r\n    };\r\n\r\n    onFinishFailedAuth = (errorInfo) => {\r\n        console.log(\"Failed:\", errorInfo);\r\n    };\r\n\r\n    renderFormAuth() {\r\n        return (\r\n            <Form\r\n                name=\"basic\"\r\n                labelCol={{ span: 8 }}\r\n                wrapperCol={{ span: 16 }}\r\n                initialValues={{ remember: true }}\r\n                onFinish={this.onFinishAuth}\r\n                onFinishFailed={this.onFinishFailedAuth}\r\n                autoComplete=\"on\"\r\n            >\r\n                <Form.Item\r\n                    label=\"email\"\r\n                    name=\"email\"\r\n                    autoComplete=\"on\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your email!\",\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your password!\",\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input.Password autoComplete=\"off\" />\r\n                </Form.Item>\r\n\r\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Войти\r\n                    </Button>\r\n                </Form.Item>\r\n                {this.state.appState ? (\r\n                    <span>{this.state.appState}</span>\r\n                ) : null}\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    onFinishReg = ({ email, password, passwordRepeat }) => {\r\n        const { registerWithEmail } = this.context;\r\n        registerWithEmail(email, password, passwordRepeat, this.onError);\r\n    };\r\n\r\n    onFinishFailedReg = (errorInfo) => {\r\n        console.log(\"Failed:\", errorInfo);\r\n    };\r\n\r\n    renderFormReg() {\r\n        return (\r\n            <Form\r\n                name=\"basic\"\r\n                labelCol={{ span: 8 }}\r\n                wrapperCol={{ span: 16 }}\r\n                initialValues={{ remember: true }}\r\n                onFinish={this.onFinishReg}\r\n                onFinishFailed={this.onFinishFailedReg}\r\n                autoComplete=\"off\"\r\n            >\r\n                <Form.Item\r\n                    label=\"email\"\r\n                    name=\"email\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your email!\",\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label=\"Password\"\r\n                    name=\"password\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please input your password!\",\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label=\"Repeat password\"\r\n                    name=\"passwordRepeat\"\r\n                    rules={[\r\n                        {\r\n                            required: true,\r\n                            message: \"Please repeat your password!\",\r\n                        },\r\n                    ]}\r\n                >\r\n                    <Input.Password />\r\n                </Form.Item>\r\n\r\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Зарегистрироваться\r\n                    </Button>\r\n                </Form.Item>\r\n                {this.state.appState ? (\r\n                    <span>{this.state.appState}</span>\r\n                ) : null}\r\n            </Form>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Layout>\r\n                <Content>\r\n                    <div className={s.root}>\r\n                        <div className={s.form_wrap}>\r\n                            <div className={s.switch}>\r\n                                <Button\r\n                                    className={s.btn_switch}\r\n                                    onClick={this.toggleLogReg}\r\n                                >\r\n                                    {this.state.reg\r\n                                        ? \"Вход\"\r\n                                        : \"Нет аккаунта? Зарегистрироваться\"}\r\n                                </Button>\r\n                            </div>\r\n                            {this.state.reg\r\n                                ? this.renderFormReg()\r\n                                : this.renderFormAuth()}\r\n                        </div>\r\n                    </div>\r\n                </Content>\r\n            </Layout>\r\n        );\r\n    }\r\n}\r\n\r\nLoginPage.contextType = firebaseContext;\r\n\r\nexport default LoginPage;\r\n","import React, { Component } from \"react\";\r\n\r\nimport { fire } from \"./services/firebase\";\r\nimport firebaseContext from \"./context/firebaseContext\";\r\n\r\nimport { Spin } from \"antd\";\r\n\r\nimport Home from \"./pages/Home\";\r\nimport LoginPage from \"./pages/LoginPage\";\r\n\r\nimport \"antd/dist/antd.css\";\r\nimport s from \"./App.module.scss\";\r\n\r\nclass App extends Component {\r\n    state = {\r\n        user: null,\r\n    };\r\n\r\n    componentDidMount() {\r\n        console.log(this.context);\r\n\r\n        const { auth, setUserUid } = this.context;\r\n\r\n        auth.onAuthStateChanged((user) => {\r\n            // user ? this.setState({ user }) : this.setState({ user: false });\r\n            if (user) {\r\n                setUserUid(user.uid);\r\n                this.setState({ user });\r\n            } else {\r\n                setUserUid(null);\r\n                this.setState({ user: false });\r\n            }\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { user } = this.state;\r\n\r\n        if (user === null) {\r\n            return (\r\n                <div className={s.spin_wrap}>\r\n                    <Spin size=\"large\" />\r\n                </div>\r\n            );\r\n        }\r\n        return <>{user ? <Home user={user} /> : <LoginPage />}</>;\r\n    }\r\n}\r\n\r\nApp.contextType = firebaseContext;\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport App from \"./App\";\r\nimport Firebase from \"./services/firebase\";\r\nimport firebaseContext from \"./context/firebaseContext\";\r\n\r\nimport \"./index.css\";\r\n\r\nReactDom.render(\r\n    <firebaseContext.Provider value={new Firebase()}>\r\n        <App />\r\n    </firebaseContext.Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Card_root__1Z0w8\",\"card\":\"Card_card__3IkW-\",\"done\":\"Card_done__2w0_A\",\"cardInner\":\"Card_cardInner__3U02t\",\"icon\":\"Card_icon__27vLo\",\"cardFront\":\"Card_cardFront__3s-Th\",\"cardBack\":\"Card_cardBack__17S8t\",\"isRemembered\":\"Card_isRemembered__364gj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__wDcbh\",\"sizeXL\":\"Header_sizeXL__2Xoym\",\"sizeL\":\"Header_sizeL__2ndGu\",\"sizeM\":\"Header_sizeM__ChjBO\",\"sizeS\":\"Header_sizeS__2VuJX\",\"sizeXS\":\"Header_sizeXS__2T9zH\",\"whiteColor\":\"Header_whiteColor__3HEof\",\"opacity\":\"Header_opacity__2QmBt\",\"uppercase\":\"Header_uppercase__3XAPi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LoginPage_root__29meb\",\"form_wrap\":\"LoginPage_form_wrap__1mIOR\",\"switch\":\"LoginPage_switch__1IjZs\",\"btn_switch\":\"LoginPage_btn_switch__3ywny\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"SectionBlock_cover__1Iu-u\",\"warp\":\"SectionBlock_warp__21wF8\",\"row\":\"SectionBlock_row__pTkJ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paragraph\":\"Paragraph_paragraph__2oaLW\",\"whiteColor\":\"Paragraph_whiteColor__310l_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"FooterBlock_cover__2UM54\",\"warp\":\"FooterBlock_warp__esP8_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card_list\":\"CardList_card_list__3-t-T\",\"form\":\"CardList_form__Gystv\"};"],"sourceRoot":""}