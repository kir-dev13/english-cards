{"version":3,"sources":["components/BackGroundBlock/BackGroundBlock.module.scss","components/CardList/CardList.module.scss","components/TranslationForm/TranslationForm.module.scss","components/Button/Button.module.sass","assets/footer.jpg","App.module.scss","assets/background.jpg","pages/Home/Home.module.scss","context/context.js","components/Header/index.js","components/Header/Header.js","components/Layout/index.js","components/Layout/Layout.js","hooks/useVoices.js","components/BackGroundBlock/index.js","components/Head/index.js","components/Paragraph/index.js","components/FooterBlock/index.js","components/Card/Card.js","components/CardList/index.js","components/CardList/CardList.js","services/dictionary.js","components/TranslationForm/index.js","components/TranslationForm/TranslationForm.js","components/SectionBlock/index.js","components/Button/index.js","pages/Home/index.js","pages/Home/Home.js","pages/LoginPageFunc/index.js","pages/LoginPageFunc/LoginPageFunc.js","App.js","services/firebase.js","index.js","components/Card/Card.module.scss","components/Head/Head.module.scss","components/Header/Header.module.scss","pages/LoginPageFunc/LoginPageFunc.module.scss","components/SectionBlock/SectionBlock.module.scss","components/Paragraph/Paragraph.module.scss","components/FooterBlock/FooterBlock.module.sass"],"names":["module","exports","firebaseContext","createContext","appContext","Header","children","className","s","root","menu","link","to","Layout","useVoices","langsArr","voices","useMemo","a","EasySpeech","init","maxTimeout","interval","console","debug","availableVoices","Error","then","voicesArr","forEach","item","index","lang","startsWith","push","voice","setVoicesbyLang","text","speak","pitch","rate","volume","BackGroundBlock","backgroundImg","fullHeight","styleCover","backgroundImage","height","cover","style","Head","sizePoint","white","opacity","uppercase","size","React","createElement","cl","toUpperCase","whiteColor","Paragraph","paragraph","FooterBlock","warp","Card","id","eng","rus","onDelete","onSpeech","useState","done","isRemembered","stateCard","setStateCard","card","onClick","prevState","cardInner","cardFront","cardBack","iconsContainer","CheckSquareOutlined","icon","DeleteOutlined","SoundOutlined","CardList","wordArr","onDeleteItem","map","key","API_KEY","process","requestTranslate","fetch","headers","Authorization","res","json","body","TranslationForm","handleAddItem","setRus","setEng","loading","setLoading","formState","setFormState","handleInputChange","e","target","getAttribute","value","getTranslateWord","field","interpretator","translate","result","status","log","handleSubmitForm","preventDefault","getWord","newWord","Date","setTimeout","onSubmit","autoComplete","placeholder","name","type","onChange","disabled","Section","backgroundColor","row","Button","btn","Home","useContext","langArr","navigate","useNavigate","customVoiceRus","customVoiceEng","setWordArr","auth","database","userUid","getUserCardsRef","firstUpdate","useRef","useEffect","on","Array","isArray","val","from","useLayoutEffect","current","set","word","find","speech","SectionBlock","newWordArr","filter","footerBackground","signOut","LoginPageFunc","Content","signWithEmail","registerWithEmail","reg","setReg","appState","setAppState","onError","onFinishAuth","email","password","onFinishFailedAuth","errorInfo","onFinishReg","passwordRepeat","onFinishFailedReg","form_wrap","switch","btn_switch","labelCol","span","wrapperCol","initialValues","remember","onFinish","onFinishFailed","Item","label","rules","required","message","Password","offset","htmlType","App","setLangsArr","user","setUser","setUserUid","onAuthStateChanged","uid","spin_wrap","Provider","path","element","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","Firebase","signInWithEmailAndPassword","catch","err","createUserWithEmailAndPassword","ref","firebase","initializeApp","this","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.a876ca9f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"BackGroundBlock_cover__1zX8R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"CardList_root__tZVIV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"TranslationForm_root__15tCQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__zCqxc\"};","module.exports = __webpack_public_path__ + \"static/media/footer.37234ecc.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spin_wrap\":\"App_spin_wrap__1_pDV\"};","module.exports = __webpack_public_path__ + \"static/media/background.898d65d0.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Home_root__J-m8p\",\"AppLogo\":\"Home_AppLogo__11H3R\",\"icon\":\"Home_icon__1wB5i\",\"App-logo-spin\":\"Home_App-logo-spin__ps0EL\"};","import { createContext } from \"react\";\r\n\r\nexport const firebaseContext = createContext(null);\r\nexport const appContext = createContext(null);\r\n","import Header from \"./Header\";\r\nexport default Header;\r\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport s from \"./Header.module.scss\";\n\nconst Header = ({ children }) => (\n    <header className={s.root}>\n        <nav className={s.menu}>\n            <NavLink className={s.link} to=\"/\">\n                Главная\n            </NavLink>\n            <NavLink className={s.link} to=\"login\">\n                Вход\n            </NavLink>\n        </nav>\n    </header>\n);\n\nexport default Header;\n","import Layout from \"./Layout\";\r\n\r\nexport default Layout;\r\n","import React from \"react\";\nimport { Outlet, Link, NavLink } from \"react-router-dom\";\nimport Header from \"../Header\";\nimport s from \"./Layout.module.scss\";\n\nconst Layout = () => {\n    return (\n        <>\n            <Header />\n\n            <Outlet />\n        </>\n    );\n};\n\nexport default Layout;\n","import EasySpeech from \"easy-speech\";\r\nimport { useMemo } from \"react\";\r\n\r\n//langsArr = array with language code, exmple 'ru', 'en', 'en-US', etc.\r\n\r\nconst useVoices = (langsArr) => {\r\n    const voices = [];\r\n    function setVoicesbyLang(voicesArr, langsArr) {\r\n        voicesArr.forEach((item, index) => {\r\n            langsArr.forEach((lang) => {\r\n                if (item.lang.startsWith(lang)) {\r\n                    voices.push({ lang: lang, voice: item });\r\n                }\r\n            });\r\n        });\r\n    }\r\n\r\n    const init = useMemo(async () => {\r\n        await EasySpeech.init({ maxTimeout: 5000, interval: 250 });\r\n        try {\r\n            console.debug(\"load complete\");\r\n            const availableVoices = await EasySpeech.voices();\r\n            return availableVoices;\r\n        } catch (e) {\r\n            throw new Error(\"error in useVoice\", e);\r\n        }\r\n    }, [langsArr]);\r\n\r\n    init.then((availableVoices) => setVoicesbyLang(availableVoices, langsArr));\r\n\r\n    const speak = async (text, voice) => {\r\n        await EasySpeech.speak({\r\n            text: text,\r\n            voice: voice,\r\n            pitch: 1,\r\n            rate: 1,\r\n            volume: 1,\r\n            // there are more events, see the API for supported events\r\n            // boundary: (e) => console.debug(\"boundary reached\", e),\r\n        });\r\n    };\r\n\r\n    return [voices, speak];\r\n};\r\n\r\nexport default useVoices;\r\n","import React from \"react\";\nimport s from \"./BackGroundBlock.module.scss\";\n\nconst BackGroundBlock = ({ children, backgroundImg, fullHeight = false }) => {\n    const styleCover = { backgroundImage: `url(${backgroundImg})` };\n    if (fullHeight) {\n        styleCover.height = \"100vh\";\n    }\n\n    return (\n        <div className={s.cover} style={styleCover}>\n            {children}\n        </div>\n    );\n};\n\nexport default BackGroundBlock;\n","import React from \"react\";\nimport cl from \"classnames\";\nimport s from \"./Head.module.scss\";\n\nconst Head = ({ children, white, opacity, uppercase, size = \"xl\" }) => {\n    let sizePoint;\n    switch (size) {\n        case \"xl\":\n            sizePoint = 1;\n            break;\n        case \"l\":\n            sizePoint = 2;\n            break;\n        case \"m\":\n            sizePoint = 3;\n            break;\n        case \"s\":\n            sizePoint = 4;\n            break;\n        case \"xs\":\n            sizePoint = 5;\n            break;\n        default:\n            sizePoint = 1;\n    }\n\n    return React.createElement(\n        `h${sizePoint}`,\n        {\n            className: cl(s.root, s[`size${size.toUpperCase()}`], {\n                [s.whiteColor]: white,\n                [s.opacity]: opacity,\n                [s.uppercase]: uppercase,\n            }),\n        },\n        children\n    );\n};\nexport default Head;\n","import React from \"react\";\nimport cl from \"classnames\";\nimport s from \"./Paragraph.module.scss\";\n\nconst Paragraph = ({ children, white }) => {\n    return (\n        <p className={cl(s.paragraph, { [s.whiteColor]: white })}>{children}</p>\n    );\n};\nexport default Paragraph;\n","import React from \"react\";\nimport s from \"./FooterBlock.module.sass\";\n\nconst FooterBlock = ({ children }) => {\n    return (\n        <div className={s.cover}>\n            <div className={s.warp}>{children}</div>\n        </div>\n    );\n};\n\nexport default FooterBlock;\n","import React, { useState } from \"react\";\r\nimport cl from \"classnames\";\r\nimport {\r\n    CheckSquareOutlined,\r\n    DeleteOutlined,\r\n    SoundOutlined,\r\n} from \"@ant-design/icons\";\r\nimport s from \"./Card.module.scss\";\r\n\r\nconst Card = ({ id, eng, rus, onDelete, onSpeech }) => {\r\n    const [stateCard, setStateCard] = useState({\r\n        done: false,\r\n        isRemembered: false,\r\n    });\r\n\r\n    const handleCardClick = () => {\r\n        setStateCard((prevState) => {\r\n            if (prevState.isRemembered) {\r\n                return { ...prevState, done: false };\r\n            } else {\r\n                return {\r\n                    ...prevState,\r\n                    done: !prevState.done,\r\n                };\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleIsRememberClick = () => {\r\n        setStateCard((prevState) => {\r\n            if (!prevState.isRemembered) {\r\n                return {\r\n                    done: false,\r\n                    isRemembered: !prevState.isRemembered,\r\n                };\r\n            } else {\r\n                return {\r\n                    ...prevState,\r\n                    isRemembered: !prevState.isRemembered,\r\n                };\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleDeleteClick = () => {\r\n        onDelete(id);\r\n    };\r\n\r\n    const handleSpeech = () => {\r\n        onSpeech(id, stateCard.done);\r\n    };\r\n\r\n    return (\r\n        <div className={s.root}>\r\n            <div\r\n                className={cl(s.card, {\r\n                    [s.done]: stateCard.done,\r\n                    [s.isRemembered]: stateCard.isRemembered,\r\n                })}\r\n                onClick={handleCardClick}\r\n            >\r\n                <div className={s.cardInner}>\r\n                    <div className={s.cardFront}>{eng}</div>\r\n                    <div className={s.cardBack}>{rus}</div>\r\n                </div>\r\n            </div>\r\n            <div className={s.iconsContainer}>\r\n                <CheckSquareOutlined\r\n                    className={s.icon}\r\n                    onClick={handleIsRememberClick}\r\n                />\r\n\r\n                <DeleteOutlined\r\n                    className={s.icon}\r\n                    onClick={handleDeleteClick}\r\n                />\r\n\r\n                <SoundOutlined className={s.icon} onClick={handleSpeech} />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Card;\r\n","import CardList from \"./CardList\";\r\n\r\nexport default CardList;\r\n","import React from \"react\";\nimport Card from \"../Card/Card\";\nimport s from \"./CardList.module.scss\";\n\nconst CardList = ({ wordArr, onSpeech, onDeleteItem }) => {\n    return (\n        <>\n            <div className={s.root}>\n                {wordArr.map(({ eng, rus, id }) => (\n                    <Card\n                        onSpeech={onSpeech}\n                        onDelete={onDeleteItem}\n                        id={id}\n                        key={id}\n                        eng={eng}\n                        rus={rus}\n                    />\n                ))}\n            </div>\n        </>\n    );\n};\n\nexport default CardList;\n","const API_KEY = process.env.REACT_APP_API_KEY;\n\nconst requestTranslate = async (text, lang = \"en-ru\") => {\n    const res = await fetch(\n        `https://reactmarathon-api.netlify.app/api/translate?text=${text}&lang=${lang}`,\n        {\n            headers: {\n                Authorization: API_KEY,\n            },\n        }\n    );\n    const body = await res.json();\n    return body;\n};\n\nexport default requestTranslate;\n","import TranslationForm from \"./TranslationForm\"\r\n\r\nexport default TranslationForm","import React, { useState } from \"react\";\nimport requestTranslate from \"../../services/dictionary\";\n\nimport s from \"./TranslationForm.module.scss\";\n\nconst TranslationForm = ({ handleAddItem }) => {\n    const [rus, setRus] = useState(\"\");\n    const [eng, setEng] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [formState, setFormState] = useState(null);\n\n    const resetForm = () => {\n        setRus(\"\");\n        setEng(\"\");\n    };\n\n    const handleInputChange = (e) => {\n        if (e.target.getAttribute(\"name\") === \"rus\") {\n            setRus(e.target.value);\n        }\n        if (e.target.getAttribute(\"name\") === \"eng\") {\n            setEng(e.target.value);\n        }\n    };\n\n    const getTranslateWord = async (field) => {\n        setLoading(true);\n        const translate = field === eng ? rus : eng;\n        const interpretator = translate === rus ? \"ru-en\" : \"en-ru\";\n        if (!field) {\n            try {\n                const result = await requestTranslate(translate, interpretator);\n                if (result.status) {\n                    console.log(\"что-то пошло не так\");\n                    setFormState(\n                        \"что-то пошло не так, возможно сервер не отвечает на запрос\"\n                    );\n                } else {\n                    console.log(result);\n                    return result.translate;\n                }\n            } catch (err) {\n                throw new Error(`Something failed: `, err);\n            } finally {\n                console.log(\"finally!\");\n                //?? setLoading(false);\n                console.log(\"finally 2\");\n            }\n        }\n    };\n\n    const handleSubmitForm = async (e) => {\n        e.preventDefault();\n        const getWord = {};\n        if (!eng && !rus) {\n            console.log(\"заполните хотя бы одно поле\");\n            setFormState(\"заполните хотя бы одно поле\");\n        } else {\n            await getTranslateWord(eng).then((res) => (getWord.eng = res));\n            await getTranslateWord(rus).then((res) => (getWord.rus = res));\n            console.log(getWord);\n            if ((rus || getWord.rus) && (eng || getWord.eng)) {\n                const newWord = {\n                    eng: eng || getWord.eng,\n                    rus: rus || getWord.rus,\n                    id: +new Date(),\n                    isRemembered: false,\n                };\n                handleAddItem(newWord);\n                resetForm();\n                console.log(newWord);\n                setFormState(\"карточка успешно добавлена добавлена!\");\n                setTimeout(() => {\n                    setFormState(null);\n                }, 2000);\n            } else {\n                console.log(\"не случилось =(\");\n                setFormState(\"не смог получить перевод\");\n            }\n            setLoading(false);\n        }\n    };\n\n    return (\n        <form className={s.root} onSubmit={handleSubmitForm}>\n            <input\n                autoComplete=\"off\"\n                placeholder=\"enter english word\"\n                name=\"eng\"\n                type=\"text\"\n                onChange={handleInputChange}\n                value={eng}\n            />\n            <input\n                autoComplete=\"off\"\n                placeholder=\"впишите слово на русском\"\n                name=\"rus\"\n                type=\"text\"\n                onChange={handleInputChange}\n                value={rus}\n            />\n            <button disabled={loading}>\n                {loading ? \"Запрашиваю перевод...\" : \"Добавить слово\"}\n            </button>\n            <span>{formState}</span>\n        </form>\n    );\n};\n\nexport default TranslationForm;\n","import React from \"react\";\nimport cl from \"classnames\";\nimport s from \"./SectionBlock.module.scss\";\n\nconst Section = ({\n    children,\n    backgroundColor = \"transparent\",\n    row = false,\n}) => {\n    const styleCover = { backgroundColor };\n    return (\n        <section className={cl(s.cover)} style={styleCover}>\n            <div className={cl(s.warp, { [s.row]: row })}>{children}</div>\n        </section>\n    );\n};\n\nexport default Section;\n","import React from \"react\";\r\nimport s from \"./Button.module.sass\";\r\n\r\nconst Button = ({ children, onClick }) => {\r\n    return (\r\n        <>\r\n            <button onClick={onClick} className={s.btn}>\r\n                {children}\r\n            </button>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import Home from \"./Home\";\r\nexport default Home;\r\n","import React, {\r\n    useState,\r\n    useEffect,\r\n    useLayoutEffect,\r\n    useRef,\r\n    useContext,\r\n} from \"react\";\r\n\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nimport { firebaseContext, appContext } from \"../../context/context\";\r\n\r\nimport useVoices from \"../../hooks/useVoices\";\r\n\r\nimport BackGroundBlock from \"../../components/BackGroundBlock\";\r\nimport Head from \"../../components/Head\";\r\nimport Paragraph from \"../../components/Paragraph\";\r\nimport FooterBlock from \"../../components/FooterBlock\";\r\nimport CardList from \"../../components/CardList\";\r\nimport TranslationForm from \"../../components/TranslationForm\";\r\nimport SectionBlock from \"../../components/SectionBlock\";\r\nimport Button from \"../../components/Button\";\r\n\r\nimport footerBackground from \"../../assets/footer.jpg\";\r\nimport firstBackground from \"../../assets/background.jpg\";\r\nimport s from \"./Home.module.scss\";\r\n\r\nconst Home = () => {\r\n    const [langArr, setLangsArr] = useContext(appContext);\r\n    const [availableVoices, speak] = useVoices(langArr);\r\n    const navigate = useNavigate();\r\n    const [customVoiceRus, setCustomVoicesRus] = useState(null);\r\n    const [customVoiceEng, setCustomVoicesEng] = useState(null);\r\n\r\n    const [wordArr, setWordArr] = useState([]);\r\n\r\n    const { database, userUid, auth, getUserCardsRef } =\r\n        useContext(firebaseContext);\r\n\r\n    const firstUpdate = useRef(true);\r\n\r\n    useEffect(() => {\r\n        getUserCardsRef().on(\"value\", (res) => {\r\n            if (Array.isArray(res.val())) {\r\n                setWordArr(res.val());\r\n            } else if (res.val()) {\r\n                setWordArr(Array.from(res.val()));\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    useLayoutEffect(() => {\r\n        if (firstUpdate.current) {\r\n            firstUpdate.current = false;\r\n        } else {\r\n            getUserCardsRef().set(wordArr);\r\n        }\r\n    }, [wordArr]);\r\n\r\n    const handleAddItem = (newWord) => {\r\n        setWordArr([...wordArr, newWord]);\r\n    };\r\n\r\n    const handleDeleteItem = (id) => {\r\n        const newWordArr = wordArr.filter((item) => item.id !== id);\r\n        setWordArr(newWordArr);\r\n    };\r\n\r\n    const onSpeech = async (id, done) => {\r\n        const word = wordArr.find((word) => word.id === id);\r\n        const speech = done\r\n            ? {\r\n                  lang: word.rus,\r\n                  voice:\r\n                      customVoiceRus ||\r\n                      availableVoices.find((item) => item.lang === \"ru\").voice,\r\n              }\r\n            : {\r\n                  lang: word.eng,\r\n                  voice:\r\n                      customVoiceEng ||\r\n                      availableVoices.find((item) => item.lang === \"en\").voice,\r\n              };\r\n        speak(speech.lang, speech.voice);\r\n    };\r\n\r\n    const handleSignOut = () => {\r\n        console.log(\"click\");\r\n\r\n        auth.signOut();\r\n\r\n        navigate(\"/login\");\r\n    };\r\n\r\n    return (\r\n        <>\r\n            {/* <BackGroundBlock backgroundImg={firstBackground} fullHeight>\r\n                    <SectionBlock>\r\n                        <Head white>Время учить слова онлайн</Head>\r\n                        <Paragraph white>\r\n                            Используй карточки для запоминания и пополняй\r\n                            словарный запас\r\n                        </Paragraph>\r\n                    </SectionBlock>\r\n                </BackGroundBlock> */}\r\n\r\n            {/* <SectionBlock>\r\n                    <Head size=\"m\">\r\n                        Тренируй память и развивай английский\r\n                    </Head>\r\n                    <SectionBlock row>\r\n                        <Paragraph>\r\n                            <ClockCircleOutlined className={s.icon} />В любое\r\n                            время\r\n                        </Paragraph>\r\n                        <Paragraph>\r\n                            <HomeOutlined className={s.icon} />\r\n                            Из любого места\r\n                        </Paragraph>\r\n                        <Paragraph>\r\n                            <SmileOutlined className={s.icon} />\r\n                            Регулярно\r\n                        </Paragraph>\r\n                    </SectionBlock>\r\n                </SectionBlock> */}\r\n            <SectionBlock backgroundColor=\"lightgrey\">\r\n                <Head size=\"s\">Запоминаем английские слова</Head>\r\n                <Paragraph>\r\n                    Чтобы добавить карточку, впишите слово в форму ниже на\r\n                    русском или английском языке в соответствующее поле ввода и\r\n                    нажмите \"Добавить слово\"\r\n                </Paragraph>\r\n                <TranslationForm handleAddItem={handleAddItem} />\r\n                <CardList\r\n                    wordArr={wordArr}\r\n                    onSpeech={onSpeech}\r\n                    onDeleteItem={handleDeleteItem}\r\n                />\r\n            </SectionBlock>\r\n            <BackGroundBlock backgroundImg={footerBackground}>\r\n                <FooterBlock>\r\n                    <Head opacity uppercase size=\"s\">\r\n                        english language\r\n                    </Head>\r\n                    <Button onClick={handleSignOut}>Выйти</Button>\r\n                </FooterBlock>\r\n            </BackGroundBlock>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import LoginPageFunc from \"./LoginPageFunc\";\r\n\r\nexport default LoginPageFunc;\r\n","import React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useState, useContext } from \"react\";\nimport { firebaseContext } from \"../../context/context\";\nimport PropTypes from \"prop-types\";\n\nimport { Layout, Form, Input, Button } from \"antd\";\nimport s from \"./LoginPageFunc.module.scss\";\n\nconst LoginPageFunc = () => {\n    const { Content } = Layout;\n    const navigate = useNavigate();\n    const { signWithEmail, registerWithEmail, auth } =\n        useContext(firebaseContext);\n    const [reg, setReg] = useState(false);\n    const [appState, setAppState] = useState(\"\");\n\n    const onError = (text) => {\n        setAppState(text);\n    };\n\n    const toggleLogReg = () => {\n        setReg((prevState) => !prevState);\n    };\n\n    const onFinishAuth = async ({ email, password }) => {\n        await signWithEmail(email, password, onError);\n        // console.log(auth);\n        setTimeout(() => {\n            navigate(\"/\");\n        }, 1000);\n    };\n\n    const onFinishFailedAuth = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n    const renderFormAuth = () => {\n        return (\n            <Form\n                name=\"basic\"\n                labelCol={{ span: 8 }}\n                wrapperCol={{ span: 16 }}\n                initialValues={{ remember: true }}\n                onFinish={onFinishAuth}\n                onFinishFailed={onFinishFailedAuth}\n                autoComplete=\"on\"\n            >\n                <Form.Item\n                    label=\"email\"\n                    name=\"email\"\n                    autoComplete=\"on\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input your email!\",\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Password\"\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input your password!\",\n                        },\n                    ]}\n                >\n                    <Input.Password autoComplete=\"off\" />\n                </Form.Item>\n\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Войти\n                    </Button>\n                </Form.Item>\n                {appState ? <span>{appState}</span> : null}\n            </Form>\n        );\n    };\n\n    const onFinishReg = ({ email, password, passwordRepeat }) => {\n        registerWithEmail(email, password, passwordRepeat, onError);\n        setTimeout(() => {\n            navigate(\"/\");\n        }, 1000);\n    };\n\n    const onFinishFailedReg = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n    const renderFormReg = () => {\n        return (\n            <Form\n                name=\"basic\"\n                labelCol={{ span: 8 }}\n                wrapperCol={{ span: 16 }}\n                initialValues={{ remember: true }}\n                onFinish={onFinishReg}\n                onFinishFailed={onFinishFailedReg}\n                autoComplete=\"off\"\n            >\n                <Form.Item\n                    label=\"email\"\n                    name=\"email\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input your email!\",\n                        },\n                    ]}\n                >\n                    <Input />\n                </Form.Item>\n\n                <Form.Item\n                    label=\"Password\"\n                    name=\"password\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please input your password!\",\n                        },\n                    ]}\n                >\n                    <Input.Password />\n                </Form.Item>\n                <Form.Item\n                    label=\"Repeat password\"\n                    name=\"passwordRepeat\"\n                    rules={[\n                        {\n                            required: true,\n                            message: \"Please repeat your password!\",\n                        },\n                    ]}\n                >\n                    <Input.Password />\n                </Form.Item>\n\n                <Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n                    <Button type=\"primary\" htmlType=\"submit\">\n                        Зарегистрироваться\n                    </Button>\n                </Form.Item>\n                {appState ? <span>{appState}</span> : null}\n            </Form>\n        );\n    };\n\n    return (\n        <Layout>\n            <Content>\n                <div className={s.root}>\n                    <h3>LoginPageFunc!</h3>\n                    <div className={s.form_wrap}>\n                        <div className={s.switch}>\n                            <Button\n                                className={s.btn_switch}\n                                onClick={toggleLogReg}\n                            >\n                                {reg\n                                    ? \"Вход\"\n                                    : \"Нет аккаунта? Зарегистрироваться\"}\n                            </Button>\n                        </div>\n                        {reg ? renderFormReg() : renderFormAuth()}\n                    </div>\n                </div>\n            </Content>\n        </Layout>\n    );\n};\n\nexport default LoginPageFunc;\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport { BrowserRouter, Routes, Route, useNavigate } from \"react-router-dom\";\r\n\r\nimport { firebaseContext } from \"./context/context\";\r\n\r\nimport { Spin } from \"antd\";\r\n\r\nimport Layout from \"./components/Layout\";\r\nimport Home from \"./pages/Home\";\r\n// import LoginPage from \"./pages/LoginPage\";\r\nimport LoginPageFunc from \"./pages/LoginPageFunc\";\r\nimport { appContext } from \"./context/context\";\r\nimport \"antd/dist/antd.css\";\r\nimport s from \"./App.module.scss\";\r\n\r\nconst App = () => {\r\n    const [langsArr, setLangsArr] = useState([\"ru\", \"en\"]);\r\n    const [user, setUser] = useState(null);\r\n    const navigate = useNavigate();\r\n    const { auth, setUserUid } = useContext(firebaseContext);\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged((user) => {\r\n            if (user) {\r\n                setUserUid(user.uid);\r\n                setUser({ user });\r\n            } else {\r\n                setUserUid(null);\r\n                setUser({ user: false });\r\n                navigate(\"/login\");\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    if (user === null) {\r\n        return (\r\n            <div className={s.spin_wrap}>\r\n                <Spin size=\"large\" />\r\n            </div>\r\n        );\r\n    }\r\n    return (\r\n        <appContext.Provider value={[langsArr, setLangsArr]}>\r\n            <Routes>\r\n                <Route path=\"/\" element={<Layout />}>\r\n                    <Route index element={<Home />} />\r\n                    <Route path=\"login\" element={<LoginPageFunc />} />\r\n                </Route>\r\n            </Routes>\r\n        </appContext.Provider>\r\n    );\r\n};\r\n\r\nexport default App;\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\n\r\nimport \"firebase/database\";\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n    authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_FIREBASE_API_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n    appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n};\r\n\r\nclass Firebase {\r\n    constructor() {\r\n        firebase.initializeApp(firebaseConfig);\r\n\r\n        this.auth = firebase.auth();\r\n        this.database = firebase.database();\r\n        this.userUid = null;\r\n    }\r\n\r\n    setUserUid = (uid) => (this.userUid = uid);\r\n\r\n    signWithEmail = (email, password, onError) => {\r\n        this.auth\r\n            .signInWithEmailAndPassword(email, password)\r\n\r\n            .catch((err) => {\r\n                console.log(err);\r\n                onError(err.message);\r\n            });\r\n    };\r\n\r\n    registerWithEmail = (email, password, passwordRepeat, onError) => {\r\n        if (password === passwordRepeat) {\r\n            this.auth\r\n                .createUserWithEmailAndPassword(email, password)\r\n                .catch((err) => onError(err.message));\r\n        } else {\r\n            onError(\"пароли не совпадают\");\r\n        }\r\n    };\r\n    getUserCardsRef = () => {\r\n        return this.database.ref(`/cards/${this.userUid}`);\r\n    };\r\n}\r\n\r\n// export const fire = firebase;\r\n\r\n// const database = fire.database();\r\n\r\n// export default database;\r\n\r\nexport default Firebase;\r\n","import React from \"react\";\r\nimport ReactDom from \"react-dom\";\r\nimport { BrowserRouter, Routes } from \"react-router-dom\";\r\nimport App from \"./App\";\r\nimport Firebase from \"./services/firebase\";\r\nimport { firebaseContext } from \"./context/context\";\r\n\r\nimport \"./index.css\";\r\n\r\nReactDom.render(\r\n    <firebaseContext.Provider value={new Firebase()}>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </firebaseContext.Provider>,\r\n    document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Card_root__15DZh\",\"card\":\"Card_card__1TyiW\",\"done\":\"Card_done__2uGsJ\",\"cardInner\":\"Card_cardInner__t54P_\",\"iconsContainer\":\"Card_iconsContainer__193pF\",\"icon\":\"Card_icon__165I1\",\"cardFront\":\"Card_cardFront__1Gh8Y\",\"cardBack\":\"Card_cardBack__2AElj\",\"isRemembered\":\"Card_isRemembered__2E_zt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Head_root__2IabV\",\"sizeXL\":\"Head_sizeXL__1KHJP\",\"sizeL\":\"Head_sizeL__1qvWY\",\"sizeM\":\"Head_sizeM__OkMWw\",\"sizeS\":\"Head_sizeS__1lTcq\",\"sizeXS\":\"Head_sizeXS__2l6on\",\"whiteColor\":\"Head_whiteColor__2n717\",\"opacity\":\"Head_opacity__38Lmb\",\"uppercase\":\"Head_uppercase__27-yd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"Header_root__14ciK\",\"menu\":\"Header_menu__1I1cs\",\"link\":\"Header_link__21eIH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"LoginPageFunc_root__ECqph\",\"form_wrap\":\"LoginPageFunc_form_wrap__2c2_m\",\"switch\":\"LoginPageFunc_switch__kX9UQ\",\"btn_switch\":\"LoginPageFunc_btn_switch__1GsPU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"SectionBlock_cover__1Iu-u\",\"warp\":\"SectionBlock_warp__21wF8\",\"row\":\"SectionBlock_row__pTkJ0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paragraph\":\"Paragraph_paragraph__2oaLW\",\"whiteColor\":\"Paragraph_whiteColor__310l_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"FooterBlock_cover__2UM54\",\"warp\":\"FooterBlock_warp__esP8_\"};"],"sourceRoot":""}